def dec_fun(enc , key):
	dec = ''
	i = 0 
	for char in enc :
		char = ord(char)
		for i in range(len(key)):
			char ^= key[i]
		dec += chr(~char & 255) #prevent overflow [8 bits]
	return dec
def read_data_from_pointer(pointer_address):
    result = ""
    x = 1 
    while (x):
        char = idaapi.get_byte(pointer_address)
        if char == 0:
            x = 0 
        result += chr(char)
        pointer_address += 1
    return result
def replace_string(addr, str):
    ea_start = addr
    for s in str:
        patch_byte(addr, ord(s))
        addr += 1
    create_strlit(ea_start, idc.BADADDR)
#-------------- Main ----------------#
start_addr = 0x405128
end_addr = 0x4052F0
key = b'I0L0v3Y0u0V1rUs'
for i in range(start_addr,end_addr,8):
 	enc_ptr = idc.get_wide_dword(i) # read pointer to enc data . 
 	enc_string = read_data_from_pointer(enc_ptr)
 	dec_data = dec_fun(enc_string , key)
 	idc.set_cmt(i,dec_data,0) #set comments


