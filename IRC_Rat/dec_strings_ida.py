def dec_fun(enc , key):
	dec = ''
	i = 0 
	for char in enc :
		char = ord(char)
		for i in range(len(key)):
			char ^= key[i]
		dec += chr(~char & 255) #prevent overflow [8 bits]
	return dec
def read_data_from_pointer(pointer_address):
    result = ""
    x = 1 
    while (x):
        char = idaapi.get_byte(pointer_address)
        if char == 0:
            x = 0 
        result += chr(char)
        pointer_address += 1
    return result
def rename_mem_addr (addr , new_name):
	set_name(addr, new_name ) 

#-------------- Main ----------------#
start_addr = 0x00405020 #start address of encrypted data [pointer]
while (1):
 	enc_ptr = idc.get_wide_dword(start_addr) # read pointer to enc data . 
 	if (enc_ptr == 0): 
 		break  
 	enc_string = read_data_from_pointer(enc_ptr)
 	key = b'I0L0v3Y0u0V1rUs'
 	dec_data = (dec_fun(enc_string , key)).replace('.','_')
 	# print(dec_fun(enc_string , key))  #debugging
 	rename_mem_addr(start_addr , 'ptr_'+ dec_data.replace('Â ','')) #here i prefere to rename the pointer itself , u can write a comment only . 
	start_addr = start_addr + 4
