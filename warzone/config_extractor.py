import pefile
import socket
def rc4crypt(data, key):
    #If the input is a string convert to byte arrays
    if type(data) == str:
        data = data.encode('utf-8')
    if type(key) == str:
        key = key.encode('utf-8')
    x = 0
    box = list(range(256))
    for i in range(256):
        x = (x + box[i] + key[i % len(key)]) % 256
        box[i], box[x] = box[x], box[i]
    x = 0
    y = 0
    out = []
    for c in data:
        x = (x + 1) % 256
        y = (y + box[x]) % 256
        box[x], box[y] = box[y], box[x]
        out.append(c ^ box[(box[x] + box[y]) % 256])
    return bytes(out) 
def read_bss_section(file_path):
        pe = pefile.PE(file_path)
        for section in pe.sections:
            if section.Name.decode().strip('\x00') == ".bss":
                virtual_address = section.VirtualAddress
                size = section.SizeOfRawData
                return pe.get_memory_mapped_image()[virtual_address:virtual_address+size]
def get_ip(ip_binary):
    ip_str = socket.inet_ntoa(ip_binary)
    return ip_str 
#--------------MAIN-----------------#
file_path = "unpacked_warzone.bin"
bss_data = read_bss_section(file_path)

key_size = bss_data[0]
#1->3 is null bytes
key = bss_data[4:key_size+4]
enc_data = bss_data[len(key) + 4:]
dec_data = rc4crypt(enc_data,key)
host_size = int.from_bytes(dec_data[:4], byteorder='little')
ip = dec_data[2:host_size+4]
print('config : IP = ',end='')
print(ip.replace(b'\x00',b''),end=' ')
print('port = ',int.from_bytes(dec_data[host_size+4:][:2], byteorder='little'))
